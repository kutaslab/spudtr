#!/usr/bin/env python3

import numpy as np
import pandas as pd
import mne
import argparse
import yaml
import spudtr.mneutils as mneutils

def create_parser():
    parser = argparse.ArgumentParser()

    g = parser.add_argument_group('Device Targets')
    g.add_argument(
        '--epochs-h5',
        dest='epochs_h5f'
    )
    g.add_argument(
        '--epochs-key',
        dest='epochs_key',
    )
    g.add_argument(
        '--config-yml',
        dest='config_yml',
        type=argparse.FileType(mode='r'),
    )
    return parser


def parse_args(parser):
    args = parser.parse_args()
    for a in ["epochs_h5f", "epochs_key", "config_yml"]:
        if getattr(args, a) is None:
            raise ValueError(f"missing argument {a}")
    return args


def load_data():

    # parse command line arguments
    args = parse_args(create_parser())
    epochs_df = pd.read_hdf(args.epochs_h5f, key=args.epochs_key)
    # load YAML config data
    config_data = yaml.load(args.config_yml, Loader=yaml.SafeLoader)
    return epochs_df, config_data

epochs_df, config_data = load_data()

eeg_streams = config_data['eeg_streams']
time = config_data['time']
epoch_id = config_data['epoch_id']
sfreq = config_data['sfreq']

#montage =  mneutils.streams2mne_digmont(eeg_streams)
#montage.plot(kind='topomap', show_names=True);

epochs =  mneutils.spudtr2mne(epochs_df, eeg_streams, time, epoch_id, sfreq)

epochs.plot(picks='eeg', scalings="auto", show=True, block=True, n_epochs=10);

